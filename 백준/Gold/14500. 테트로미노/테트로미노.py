blocks = [
  ((0, 1), (0, 2), (0, 3)),
  ((1, 0), (2, 0), (3, 0)),
  ((0, 1), (1, 1), (1, 0)),
  ((1, 0), (2, 0), (2, 1)),
  ((0, 1), (0, 2), (1, 0)), #5
  ((0, 1), (1, 1), (2, 1)),
  ((0, 1), (0, 2), (-1, 2)),# 7
  ((1, 0), (2, 0), (2, -1)),
  ((1, 0), (1, 1), (1, 2)),
  ((1, 0), (2, 0), (0, 1)), # 10
  ((0, 1), (0, 2), (1, 2)),
  ((1, 0), (1, 1), (2, 1)),
  ((0, 1), (1, 0), (1, -1)), 
  ((0, 1), (1, 1), (1, 2)), # 14
  ((1, 0), (1, -1), (2, -1)),
  ((0, 1), (1, 0), (1, -1)),
  ((0, 1), (1, 1), (1, 2)), 
  ((1, 0), (1, -1), (2, -1)), 
  ((0, 1), (0, 2), (1, 1)), 
  ((1, -1), (1, 0), (1, 1)), 
  ((1, 0), (1, 1), (2, 0)),
  ((1, -1), (1, 0), (2, 0))
  
]
n, m = map(int, input().split())
board = [list(map(int, input().split())) for _ in range(n)]
ans = 0
for i in range(n):
  for j in range(m):
    for block in blocks: # 각 도형 모양
      score = board[i][j]
      for dx, dy in block: # 이동해야하는 좌표값이
        x = i + dx
        y = j + dy
        if 0<=x<n and 0<=y<m: # 판 안에 있으면
          score += board[x][y]
        else:
          break

      ans = max(ans, score) # score가 더 높은 경우 갱신
print(ans)
        
